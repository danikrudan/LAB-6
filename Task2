#define _CRT_SECURE_NO_WARNINGS
 
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <malloc.h>
 
int get_int(const char* msg) {
    int number;
    printf("%s", msg);
    while (scanf("%d", &number) != 1 || getchar() != '\n') {
        printf("Ошибка!\n");
        rewind(stdin);
        printf("%s", msg);
    }
 
    return number;
}
 
 
int add_element_to_matrix(int** numbers, int row, int col) {
    printf("Введите %d строку %d столбец матрицы: ", row + 1, col + 1);
    if (scanf("%d", &numbers[row][col]) != 1) {
        printf("Ошибка ввода");
        return 0;
    }
}
 
int** create_matrix(int array_length, int col_count) {
    int** numbers;
    int i, j;
    numbers = (int**)malloc(array_length * sizeof(int));
    for (int j = 0; j < array_length; ++j) {
        numbers[j] = (int*)malloc(col_count * sizeof(int));
        for (int i = 0; i < col_count; i++)
        {
            if (add_element_to_matrix(numbers, j, i) == 0) {
                create_matrix(array_length, col_count);
            }
        }
    }
 
    return numbers;
}
 
int get_count_even_numbers(int count_col, int row, int* numbers[]) {
    int count_even_numbers = 0;
    int i;
    for (int i = 0; i < count_col; i++)
    {
        if (numbers[row][i] % 2 == 0) {
            count_even_numbers++;
        }
    }
 
    return count_even_numbers;
}
 
void print_array(int** numbers, int array_length, int col_count) {
    int i, j;
    for (int i = 0; i < array_length; i++) {
        for (int j = 0; j < col_count; j++)
        {
            printf("%5d", numbers[i][j]);
        }
        printf("\n");
    }
}
 
int** sort(int** numbers, int array_length, int col_count) {
    int i, j;
    for (int i = 1; i < array_length; i++) {
        for (int j = i; j > 0 && get_count_even_numbers(col_count, j, numbers) > get_count_even_numbers(col_count, j - 1, numbers); j--) {
            int* tmp = numbers[j - 1];
            numbers[j - 1] = numbers[j];
            numbers[j] = tmp;
        }
    }
 
    return numbers;
}
 
 
int main() {
    setlocale(LC_ALL, "rus");
    int array_length = get_int("Введите количество строк матрицы: ");
    int col_count = get_int("Введите количество столбцов");
    int** numbers = create_matrix(array_length, col_count);
 
    printf("Старый массив: \n");
    print_array(numbers, array_length, col_count);
 
    int** new_numbers = sort(numbers, array_length, col_count);
 
    printf("\nНовый массив: \n");
    print_array(new_numbers, array_length, col_count);
 
    return 0;
}
